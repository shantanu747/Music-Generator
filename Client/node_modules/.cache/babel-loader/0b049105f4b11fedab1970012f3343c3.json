{"ast":null,"code":"/* See license.txt for terms of usage */\nvar _ = require('underscore');\n\nexports.get = function (url, params, cb) {\n  exports.send(url, 'GET', params, cb);\n};\n\nexports.post = function (url, params, cb) {\n  exports.send(url, 'POST', params, cb);\n};\n\nexports.send = function (url, method, params, cb) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState == 4) {\n      var data = xhr.responseText;\n\n      try {\n        data = JSON.parse(data);\n      } catch (exc) {}\n\n      if (cb) {\n        cb(data);\n      }\n    }\n  };\n\n  var body;\n\n  if (params) {\n    var bodies = [];\n\n    for (var name in params) {\n      bodies.push(name + '=' + encodeURIComponent(params[name]));\n    }\n\n    body = bodies.join('&');\n\n    if (body.length) {\n      xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n    }\n  }\n\n  xhr.send(body);\n};\n\nexports.getJSON = function (url, params, cb) {\n  var pairs = ['callback=jsonp'];\n\n  _.each(params, function (value, key) {\n    pairs[pairs.length] = key + '=' + value;\n  });\n\n  if (pairs.length) {\n    url = url + (url.indexOf('?') == -1 ? '?' : '&') + pairs.join('&');\n  }\n\n  function jsonpReturn(o) {\n    self.jsonp = undefined;\n\n    if (!o || o.error) {\n      if (cb) cb(o);\n    } else {\n      if (cb) cb(0, o);\n    }\n  }\n\n  if (has('appjs')) {\n    self.jsonp = jsonpReturn;\n    appjs.load(url, 'GET', {}, params, function (err, data) {\n      if (err) {\n        cb(err);\n      } else {\n        sandboxEval(data);\n      }\n    });\n  } else if (self.document) {\n    self.jsonp = function (o) {\n      // Return on a timeout to ensure that getJSON calls return asynchronously. There\n      // is a case in IE where, after hitting the back button, this will return\n      // synchronously and potentially confuse some clients.\n      setTimeout(function () {\n        jsonpReturn(o);\n      }, 0);\n    };\n\n    function cleanup() {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n    }\n\n    var script = document.createElement('script');\n    script.type = 'text/javascript'; // script.async = true;\n\n    script.src = url;\n    script.onload = cleanup;\n\n    script.onerror = function (event) {\n      cleanup();\n      cb(\"Error\");\n    };\n\n    var head = document.getElementsByTagName(\"head\")[0];\n    head.appendChild(script);\n  } else {\n    self.jsonp = jsonpReturn;\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        eval(xhr.responseText);\n        self.jsonp = null;\n      }\n    };\n\n    xhr.send(\"\");\n  }\n};\n\nexports.postJSON = function (url, params, cb) {\n  exports.post(url, params, function (data) {\n    var result = eval(data);\n    cb(0, result);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}